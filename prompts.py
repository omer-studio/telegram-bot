"""
prompts.py
----------
קובץ זה מרכז את כל הפרומטים (system_prompt) של הבוט.
הרציונל: כל פרומט מרוכז במקום אחד, עם תיעוד קצר בעברית ליד כל משתנה.
"""

# --- 1. פרומט ראשי לשיחה (SYSTEM_PROMPT) ---
# משמש כפרומט מערכת לכל שיחה עם הבוט. מגדיר את האישיות, הסגנון, הכללים והעקרונות של דניאל.
# כולל את כל ההנחיות, הכללים, השראות, עקרונות, דגשים, ומבנה השיחה.
with open("system_prompt.txt", encoding="utf-8") as f:
    SYSTEM_PROMPT = f.read()

# --- 2. פרומט לחילוץ תעודת זהות רגשית (מידע אישי) ---
# משמש ל-GPT שמחלץ מהודעת המשתמש גיל, דת, עיסוק, מי יודע/לא יודע וכו'.
PROFILE_EXTRACTION_PROMPT = (
    """
    אתה מחלץ מידע אישי מהודעה חופשית של משתמש. החזר תמיד JSON תקני בלבד, ללא הסברים.
    שדות אפשריים: age (גיל), self_religiosity_level (רמת דתיות), who_knows (מי יודע), who_doesnt_know (מי לא יודע), occupation_or_role (עיסוק/תפקיד).
    דוגמה:
    "אני בן 25, יהודי דתי" → {"age": 25, "self_religiosity_level": "דתי"}
    "אמא שלי לא יודעת עלי, אני עובד בבנק" → {"who_doesnt_know": "אמא", "occupation_or_role": "עובד בבנק"}
    גם אם יש רק גיל, החזר תמיד: {"age": 34}
    """
)

# --- 3. פרומט תמצות תשובת הבוט (סיכום קצר) ---
# משמש ל-GPT שמסכם את תשובת הבוט למשפט קצר, חם, בגוף ראשון, עם אמירה אישית ושאלה, בסגנון וואטסאפ.
BOT_REPLY_SUMMARY_PROMPT = (
    """
    סכם את ההודעה שלי כאילו אני מדבר עם חבר: משפט אחד חם ואישי בסגנון חופשי (לא תיאור יבש), בגוף ראשון, כולל אמירה אישית קצרה על מהות התגובה שלי, ואז את השאלה ששאלתי אם יש, בצורה חמה וזורמת, עד 20 מילים בסך הכל. תשלב אימוג'י רלוונטי אם מתאים, כמו שמדברים בווטסאפ. אל תעשה ניתוחים טכניים או תיאור של הודעה – ממש תכתוב את זה כמו הודעת וואטסאפ קצרה, בגוף ראשון, בסגנון חופשי וקליל.
    """
)

# --- 4. פרומט מיזוג חכם של מידע רגיש (GPT4) ---
# משמש ל-GPT שמבצע מיזוג זהיר של תעודת זהות רגשית קיימת עם מידע חדש, כולל כללים למיזוג שדות רגישים, טראומות, מי יודע/לא יודע, וכו'.
SENSITIVE_PROFILE_MERGE_PROMPT = (
    """
    אתה מומחה למיזוג זהיר של מידע רגיש. קיבלת:
    1. ת.ז רגשית קיימת
    2. מידע חדש מההודעה
    3. ההודעה המקורית לקונטקסט
    עקרונות קריטיים:
    - אל תמחק מידע אלא אם המשתמש אמר במפורש שמשהו השתנה
    - מיזוג חכם: צבור מידע חדש עם קיים, אל תדרוס
    - who_knows ↔ who_doesnt_know: אם מישהו עבר מרשימה אחת לשנייה - הסר אותו מהרשימה הראשונה
    - trauma_history: צבור עם '; ' בין טראומות שונות, ואם יש טראומות דומות (למשל טראומה של מכות ואחריה טראומה של צבא שקשורה לאותה חוויה), תאחד אותן לאירוע אחד מתומצת. אל תיצור כפילויות.
    - attracted_to: שלב באחוזים או תיאור מדויק
    - אם יש סתירה - העדף את המידע החדש אם הוא מפורש
    דוגמה לאיחוד טראומות:
    אם יש 'טראומה: מכות בילדות' ו-'טראומה: מכות בצבא', תאחד ל-'טראומה: חוויות של מכות בילדות ובצבא'.
    לאחר המיזוג, עדכן את "summary" לשקף את הזהות הרגשית המעודכנת:
    - גיל, זהות דתית, מצב זוגי עכשיו
    - מצב ארון נוכחי (מי יודע/לא יודע)
    - שינויים משמעותיים שקרו
    עד 100 תווים, תמציתי ועדכני.
    החזר רק JSON מעודכן מלא, בלי הסברים!
    """
) 